version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password  # ✅ セキュリティを考慮して別のパスワードを使用
      MYSQL_DATABASE: demo
      MYSQL_USER: user
      MYSQL_PASSWORD: 6213ryoy
    ports:
      - "3306:3306"  # ✅ 外部公開して複数人でアクセス可能に
    volumes:
      - mysql-data:/var/lib/mysql  # ✅ MySQL のデータを永続化
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf  # ✅ 追加
    networks:
      - app-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci  #
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 5

  uwsgi:
    build: ./app
    volumes:
      - ./app:/var/www/
      - ./app/log:/var/log/uwsgi/
    ports:
      - "8000:8000"
    environment:
      TZ: "Asia/Tokyo"
      DATABASE_HOST: mysql  # ✅ コンテナの MySQL に接続
      DATABASE_USER: user
      DATABASE_PASSWORD: 6213ryoy
      DATABASE_NAME: demo
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["sh", "-c", "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000"]

  nginx:
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log:/var/log/nginx
      - ./nginx/build:/usr/share/nginx/html
    ports:
      - "80:80"
    environment:
      TZ: "Asia/Tokyo"
    depends_on:
      uwsgi:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql-data:  # ✅ MySQL のデータを保存し、コンテナを消してもデータを維持

networks:
  app-network:
    driver: bridge
